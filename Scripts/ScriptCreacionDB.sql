-- Database: HospiTEC

-- DROP DATABASE IF EXISTS "HospiTEC";

CREATE DATABASE "HospiTEC"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Spanish_Spain.1252'
    LC_CTYPE = 'Spanish_Spain.1252'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE SCHEMA personal;
CREATE SCHEMA paciente;
CREATE SCHEMA salones;
CREATE SCHEMA reservacion;

CREATE TABLE personal.TIPO_PERSONAL(
	ID SERIAL PRIMARY KEY,
	Descripcion VARCHAR(20) NOT NULL
);

CREATE TABLE salones.ESTADO_CAMA(
	ID SERIAL PRIMARY KEY,
	Estado VARCHAR(20) NOT NULL
);

CREATE TABLE salones.TIPO_MEDICINA(
	ID SERIAL PRIMARY KEY,
	Descripcion VARCHAR(20) NOT NULL
);



CREATE TABLE reservacion.PROCEDIMIENTO_MEDICO(
	ID SERIAL PRIMARY KEY,
	Nombre VARCHAR(100) UNIQUE NOT NULL,
	CantDias INT NOT NULL
);

CREATE TABLE personal.PERSONAL(
	Nombre VARCHAR(100) NOT NULL,
	AP1 VARCHAR(100) NOT NULL,
	AP2 VARCHAR(100) NOT NULL,
	Cedula VARCHAR(9) UNIQUE NOT NULL,
	Nacimiento DATE NOT NULL,
	Correo VARCHAR(100) NOT NULL,
	Password VARCHAR(100) NOT NULL,
	FechaIngreso DATE NOT NULL,
	IDTipoPersonal INT NOT NULL,
	PRIMARY KEY(Cedula),
	CONSTRAINT "key1" FOREIGN KEY(IDTipoPersonal) REFERENCES personal.TIPO_PERSONAL(ID)
);

CREATE TABLE personal.TELEFONO(
	ID SERIAL PRIMARY KEY,
	PersonalCedula VARCHAR(9) NOT NULL,
	Telefono VARCHAR(20) NOT NULL,
	CONSTRAINT "key2" FOREIGN KEY(PersonalCedula) REFERENCES personal.PERSONAL(Cedula)
);

CREATE TABLE paciente.Paciente(
	Nombre VARCHAR(100) NOT NULL,
	AP1 VARCHAR(100) NOT NULL,
	AP2 VARCHAR(100) NOT NULL,
	Cedula VARCHAR(9) UNIQUE NOT NULL,
	Nacimiento DATE NOT NULL,
	Correo VARCHAR(100) NOT NULL,
	Password VARCHAR(100) NOT NULL,
	PRIMARY KEY(Cedula)
);

CREATE TABLE paciente.TELEFONO(
	ID SERIAL PRIMARY KEY,
	PacienteCedula VARCHAR(9) NOT NULL,
	Telefono VARCHAR(20) NOT NULL,
	CONSTRAINT "key3" FOREIGN KEY(PacienteCedula) REFERENCES paciente.Paciente(Cedula)
);

CREATE TABLE paciente.PATOLOGIA(
	ID SERIAL PRIMARY KEY,
	Nombre VARCHAR(50) UNIQUE NOT NULL,
	Tratamiento VARCHAR(200) NOT NULL
);

CREATE TABLE paciente.PATOLOGIA_POR_PACIENTE(
	ID_Patologia INT,
	CedulaPaciente VARCHAR(9) NOT NULL,
	PRIMARY KEY(ID_Patologia,CedulaPaciente),
	CONSTRAINT "key4" FOREIGN KEY(ID_Patologia) REFERENCES paciente.PATOLOGIA(ID),
	CONSTRAINT "key5" FOREIGN KEY(CedulaPaciente) REFERENCES paciente.PACIENTE(Cedula)
);


CREATE TABLE paciente.HISTORIAL_MEDICO(
	ID SERIAL,
	Fecha DATE NOT NULL,
	Tratamiento VARCHAR(200) NOT NULL,
	CedulaPaciente VARCHAR(9) NOT NULL,
	ID_Procedimiento INT NOT NULL,
	PRIMARY KEY(ID,CedulaPaciente),
	CONSTRAINT "key6" FOREIGN KEY(ID_Procedimiento) REFERENCES reservacion.PROCEDIMIENTO_MEDICO(ID)
);

CREATE TABLE salones.Salon(
	NumSalon INT UNIQUE NOT NULL PRIMARY KEY,
	Nombre VARCHAR(100) NOT NULL,
	Piso INT NOT NULL,
	Capacidad INT NOT NULL,
	ID_Tipo_Medicina INT NOT NULL,
	CONSTRAINT "key7" FOREIGN KEY(ID_Tipo_Medicina) REFERENCES salones.TIPO_MEDICINA(ID)
);


CREATE TABLE salones.CAMA(
	NumCama INT UNIQUE NOT NULL PRIMARY KEY,
	UCI BIT NOT NULL,
	ID_EstadoCama INT NOT NULL,
	Num_Salon INT NOT NULL,
	CONSTRAINT "key8" FOREIGN KEY(ID_EstadoCama) REFERENCES salones.ESTADO_CAMA(ID),
	CONSTRAINT "key9" FOREIGN KEY(Num_Salon) REFERENCES salones.SALON(NumSalon)
);



CREATE TABLE salones.EQUIPO_MEDICO(
	ID SERIAL PRIMARY KEY,
	Nombre VARCHAR(100) UNIQUE NOT NULL,
	Proveedor VARCHAR(100) NOT NULL,
	CantDisponible INT NOT NULL
);

CREATE TABLE salones.EQUIPO_POR_CAMA(
	Num_Cama INT NOT NULL,
	ID_EquipoMedico INT NOT NULL,
	PRIMARY KEY(Num_Cama, ID_EquipoMedico),
	CONSTRAINT "key13" FOREIGN KEY(Num_Cama) REFERENCES salones.CAMA(NumCama),
	CONSTRAINT "key14" FOREIGN KEY(ID_EquipoMedico) REFERENCES salones.EQUIPO_MEDICO(ID)
)

CREATE TABLE reservacion.RESERVACION(
	ID SERIAL PRIMARY KEY,
	FechaIngreso DATE NOT NULL,
	FechaSalida DATE NOT NULL,
	CedPaciente VARCHAR(9) NOT NULL,
	IDProcMed INT NOT NULL,
	CONSTRAINT "key11" FOREIGN KEY(CedPaciente) REFERENCES paciente.PACIENTE(Cedula),
	CONSTRAINT "key12" FOREIGN KEY(IDProcMed) REFERENCES reservacion.PROCEDIMIENTO_MEDICO(ID)
);